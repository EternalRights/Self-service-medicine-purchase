import{P as w,z as x,u as $,g as d,p as y,E as s,T as k,U as f,V as S}from"./index-CwdkBvns.js";import{u as C,M as T}from"./notification-ChYEltcZ.js";const D=w("cart",()=>{const c=x(),o=$(),g=C(),n=d([]),i=d(!1),m=y(()=>n.value.reduce((t,e)=>t+e.quantity,0)),p=y(()=>n.value.reduce((t,e)=>t+e.drug.price*e.quantity,0).toFixed(2)),v=t=>{if(!c.isOpen){s.warning("当前暂停营业，无法添加商品");return}if(t.stock_quantity<=0){s.warning("该商品已售罄");return}const e=n.value.find(a=>a.drug.id===t.id);e?e.quantity<t.stock_quantity?(e.quantity+=1,s.success(`已增加 ${t.generic_name} 数量`)):s.warning("已达到库存上限"):(n.value.push({drug:{...t},quantity:1}),s.success(`已添加 ${t.generic_name} 到购物车`))},q=(t,e)=>{const a=n.value.find(r=>r.drug.id===t);a&&(e<=0?u(t):e>a.drug.stock_quantity?(s.warning(`库存不足，最多可购买 ${a.drug.stock_quantity} 件`),a.quantity=a.drug.stock_quantity):a.quantity=e)},_=t=>{const e=n.value.find(a=>a.drug.id===t);e&&(e.quantity<e.drug.stock_quantity?e.quantity+=1:s.warning("已达到库存上限"))},h=async t=>{const e=n.value.find(a=>a.drug.id===t);if(e)if(e.quantity>1)e.quantity-=1;else try{await k.confirm("确定要删除该商品吗？","提示",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),u(t)}catch{}},u=t=>{const e=n.value.findIndex(a=>a.drug.id===t);if(e!==-1){const a=n.value.splice(e,1)[0];s.success(`已移除 ${a.drug.generic_name}`)}},l=()=>{n.value=[]};return{cartItems:n,totalItems:m,totalAmount:p,loading:i,addItem:v,updateQuantity:q,increaseQuantity:_,decreaseQuantity:h,removeItem:u,clearCart:l,checkout:async()=>{if(!c.isOpen){s.warning("当前暂停营业，无法结算");return}if(n.value.length===0){s.warning("购物车为空");return}try{i.value=!0;const t={user_id:o.userId,items:n.value.map(r=>({drug_id:r.drug.id,quantity:r.quantity,unit_price:r.drug.price}))},e=await f("/orders",t),a=n.value.map(r=>`${r.drug.generic_name} x ${r.quantity}`).join(", ");g.addNotification({title:"用户购物完成",content:`用户 ${o.userName} 完成一笔订单。订单号: ${e.id}, 总金额: ¥${e.total_amount}`,messageType:T.ORDER_CREATED}),l(),s.success("结算成功")}catch(t){s.error("结算失败: "+t.message)}finally{i.value=!1}},loadCart:async()=>{try{i.value=!0;const t=await S("/cart");n.value=t.items}catch(t){s.error("加载购物车失败: "+t.message)}finally{i.value=!1}},syncCart:async()=>{try{i.value=!0,await f("/cart/sync",{items:n.value.map(t=>({drug_id:t.drug.id,quantity:t.quantity}))})}catch(t){s.error("同步购物车失败: "+t.message)}finally{i.value=!1}}}});export{D as u};
